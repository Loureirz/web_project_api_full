{"ast":null,"code":"import{BrowserRouter,Router,Route,Routes,Navigate}from\"react-router-dom\";import Header from\"./Header.jsx\";import Main from\"./Main.jsx\";import Footer from\"./Footer.jsx\";import api from\"../utils/api.js\";import{useEffect,useState}from\"react\";import ImagePopup from\"./ImagePopup.jsx\";import EditProfile from\"./EditProfile.jsx\";import EditAvatar from\"./EditAvatar.jsx\";import NewCard from\"./NewCard.jsx\";import Register from\"./Register.jsx\";import Login from\"./Login.jsx\";import ProtectedRoute from\"./ProtectedRoute.jsx\";import ConfirmationPopup from\"./RemoveCard.jsx\";import{CurrentUserContext}from\"../contexts/CurrentUserContext.js\";import*as auth from\"../utils/auth.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isEditProfilePopupOpen,setIsEditProfilePopupOpen]=useState(false);const[isAddPlacePopupOpen,setIsAddPlacePopupOpen]=useState(false);const[isEditAvatarPopupOpen,setIsEditAvatarPopupOpen]=useState(false);const[isConfirmationPopupOpen,setIsConfirmationPopupOpen]=useState(false);const[cardToDelete,setCardToDelete]=useState(null);const[selectedCard,setSelectedCard]=useState(null);const[currentUser,setCurrentUser]=useState({name:\"\",about:\"\"});const[cards,setCards]=useState([]);const[loggedIn,setLoggedIn]=useState(localStorage.getItem(\"loggedIn\")?true:false);const[userEmail,setUserEmail]=useState(localStorage.getItem(\"userEmail\")||\"\");useEffect(()=>{const token=localStorage.getItem(\"jwt\");if(token){auth.checkToken(token).then(()=>{setLoggedIn(true);setUserEmail(localStorage.getItem(\"userEmail\"));}).catch(error=>{console.error(\"Erro ao verificar token:\",error);localStorage.removeItem(\"jwt\");setLoggedIn(false);});}else{setLoggedIn(false);}api.getUserInfo().then(data=>{setCurrentUser(data);}).catch(error=>{console.error('Erro ao obter dados do usuário:',error);});api.getInitialCards().then(setCards).catch(error=>console.log('Erro ao obter dados dos cards:',error));},[]);const handleUpdateUser=userData=>{if(!userData.name||!userData.about){console.log('Erro: nome ou descrição ausentes');return;// Não envia a requisição se os dados estiverem incompletos\n}api.editUserInfo(userData).then(userInfo=>{setCurrentUser(userInfo);// Atualiza os dados do usuário\ncloseAllPopups();// Fecha o popup\n}).catch(error=>{console.log('Erro ao atualizar o perfil:',error);});};const handleLogin=email=>{setLoggedIn(true);setUserEmail(email);localStorage.setItem(\"loggedIn\",\"true\");localStorage.setItem(\"userEmail\",email);};const handleLogout=()=>{setLoggedIn(false);setUserEmail(\"\");localStorage.removeItem(\"loggedIn\");localStorage.removeItem(\"userEmail\");};const handleUpdateAvatar=data=>{(async()=>{await api.editAvatar(data).then(newData=>{setCurrentUser(newData);// Atualiza o avatar do usuário localmente\ncloseAllPopups();// Fecha o pop-up após a atualização\n}).catch(error=>console.error(\"Erro ao atualizar o avatar:\",error));})();};const handleCardClick=card=>{setSelectedCard(card);};const handleCardLike=card=>{const isLiked=card.likes.some(i=>i._id===currentUser._id);api.changeLikeCardStatus(card._id,isLiked).then(newCard=>{// Atualiza o estado de cards, substituindo apenas o card que mudou\nsetCards(prevCards=>{if(prevCards.length===0){return prevCards;// Retorna o estado anterior sem mudanças\n}// Retorna uma nova lista de cards, substituindo apenas o card atualizado\nconst updatedCards=prevCards.map(c=>c._id===card._id?newCard:c);return updatedCards;});}).catch(error=>console.log(\"Erro ao atualizar o like:\",error));};function handleDeleteClick(card){setCardToDelete(card);// Define o card a ser excluído\nsetIsConfirmationPopupOpen(true);// Abre o popup de confirmação\n}// Função chamada após confirmação\nfunction confirmDelete(){if(!cardToDelete)return;// Verificação de segurança para evitar chamadas desnecessárias\napi.removeCard(cardToDelete._id)// Chama a API para deletar o card\n.then(()=>{setCards(state=>state.filter(c=>c._id!==cardToDelete._id));// Remove o card do estado\nsetCardToDelete(null);// Limpa o card selecionado\nsetIsConfirmationPopupOpen(false);// Fecha o popup de confirmação\n}).catch(error=>console.log(\"Erro ao deletar o card:\",error));}const handleAddPlaceSubmit=newCardData=>{api.addCard(newCardData).then(newCard=>{setCards(prevCards=>[newCard,...prevCards]);closeAllPopups();}).catch(error=>console.error('Erro ao adicionar o cartão:',error));};const handleEditAvatarClick=()=>{setIsEditAvatarPopupOpen(true);};const handleEditProfileClick=()=>{setIsEditProfilePopupOpen(true);};const handleAddPlaceClick=()=>{setIsAddPlacePopupOpen(true);};const closeAllPopups=()=>{setIsAddPlacePopupOpen(false);setIsEditAvatarPopupOpen(false);setIsEditProfilePopupOpen(false);setSelectedCard(null);};return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsxs(CurrentUserContext.Provider,{value:{currentUser,handleUpdateUser,handleUpdateAvatar},children:[/*#__PURE__*/_jsx(Header,{loggedIn:loggedIn,userEmail:userEmail,handleLogout:handleLogout}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/signin\",element:/*#__PURE__*/_jsx(Login,{handleLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(ProtectedRoute,{loggedIn:loggedIn,children:/*#__PURE__*/_jsx(Main,{cards:cards,onEditAvatarClick:handleEditAvatarClick,isEditAvatarPopupOpen:isEditAvatarPopupOpen,onEditProfileClick:handleEditProfileClick,isEditProfilePopupOpen:isEditProfilePopupOpen,onAddPlaceClick:handleAddPlaceClick,isAddPlacePopupOpen:isAddPlacePopupOpen,closeAllPopups:closeAllPopups,onCardClick:handleCardClick,onCardLike:handleCardLike,onCardDelete:handleDeleteClick})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]}),/*#__PURE__*/_jsx(EditProfile,{isOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser}),/*#__PURE__*/_jsx(EditAvatar,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar}),/*#__PURE__*/_jsx(NewCard,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,onAddPlaceSubmit:handleAddPlaceSubmit}),/*#__PURE__*/_jsx(ConfirmationPopup,{isOpen:isConfirmationPopupOpen,onClose:()=>setIsConfirmationPopupOpen(false),onConfirmationSubmit:confirmDelete}),selectedCard&&/*#__PURE__*/_jsx(ImagePopup,{card:selectedCard,onClose:closeAllPopups}),/*#__PURE__*/_jsx(Footer,{})]})})});}export default App;","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Navigate","Header","Main","Footer","api","useEffect","useState","ImagePopup","EditProfile","EditAvatar","NewCard","Register","Login","ProtectedRoute","ConfirmationPopup","CurrentUserContext","auth","jsx","_jsx","jsxs","_jsxs","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","cardToDelete","setCardToDelete","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","loggedIn","setLoggedIn","localStorage","getItem","userEmail","setUserEmail","token","checkToken","then","catch","error","console","removeItem","getUserInfo","data","getInitialCards","log","handleUpdateUser","userData","editUserInfo","userInfo","closeAllPopups","handleLogin","email","setItem","handleLogout","handleUpdateAvatar","editAvatar","newData","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","prevCards","length","updatedCards","map","c","handleDeleteClick","confirmDelete","removeCard","state","filter","handleAddPlaceSubmit","newCardData","addCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","children","className","Provider","value","path","element","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","onCardClick","onCardLike","onCardDelete","to","replace","isOpen","onClose","onUpdateUser","onUpdateAvatar","onAddPlaceSubmit","onConfirmationSubmit"],"sources":["/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/components/App.jsx"],"sourcesContent":["import { BrowserRouter, Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport Header from \"./Header.jsx\";\nimport Main from \"./Main.jsx\";\nimport Footer from \"./Footer.jsx\";\nimport api from \"../utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./ImagePopup.jsx\";\nimport EditProfile from \"./EditProfile.jsx\";\nimport EditAvatar from \"./EditAvatar.jsx\";\nimport NewCard from \"./NewCard.jsx\";\nimport Register from \"./Register.jsx\";\nimport Login from \"./Login.jsx\";\nimport ProtectedRoute from \"./ProtectedRoute.jsx\";\nimport ConfirmationPopup from \"./RemoveCard.jsx\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport * as auth from \"../utils/auth.js\";\n\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({ name: \"\", about: \"\" });\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(\n    localStorage.getItem(\"loggedIn\") ? true : false\n  ); \n  const [userEmail, setUserEmail] = useState(\n    localStorage.getItem(\"userEmail\") || \"\"\n  );\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      auth\n        .checkToken(token)\n        .then(() => {\n          setLoggedIn(true);\n          setUserEmail(localStorage.getItem(\"userEmail\"));\n        })\n        .catch((error) => {\n          console.error(\"Erro ao verificar token:\", error);\n          localStorage.removeItem(\"jwt\");\n          setLoggedIn(false);\n        });\n    } else {\n      setLoggedIn(false);\n    }\n\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((error) => {\n        console.error('Erro ao obter dados do usuário:', error);\n      });\n  \n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch((error) => console.log('Erro ao obter dados dos cards:', error));\n  }, []);\n\n    const handleUpdateUser = (userData) => {\n      if (!userData.name || !userData.about) {\n        console.log('Erro: nome ou descrição ausentes');\n        return; // Não envia a requisição se os dados estiverem incompletos\n      }\n    \n      api.editUserInfo(userData)\n        .then((userInfo) => {\n          setCurrentUser(userInfo); // Atualiza os dados do usuário\n          closeAllPopups(); // Fecha o popup\n        })\n        .catch((error) => {\n          console.log('Erro ao atualizar o perfil:', error);\n        });\n    };\n\n    const handleLogin = (email) => {\n      setLoggedIn(true);\n      setUserEmail(email);\n      localStorage.setItem(\"loggedIn\", \"true\");\n      localStorage.setItem(\"userEmail\", email);\n    };\n  \n    const handleLogout = () => {\n      setLoggedIn(false);\n      setUserEmail(\"\");\n      localStorage.removeItem(\"loggedIn\");\n      localStorage.removeItem(\"userEmail\");\n    };\n\n    const handleUpdateAvatar = (data) => {\n      (async () => {\n        await api\n          .editAvatar(data)\n          .then((newData) => {\n            setCurrentUser(newData); // Atualiza o avatar do usuário localmente\n            closeAllPopups(); // Fecha o pop-up após a atualização\n          })\n          .catch((error) => console.error(\"Erro ao atualizar o avatar:\", error));\n      })();\n    };\n  \n\n  const handleCardClick = (card) => {\n    setSelectedCard(card)\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  \n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n  \n        // Atualiza o estado de cards, substituindo apenas o card que mudou\n        setCards((prevCards) => {\n          if (prevCards.length === 0) {\n            return prevCards; // Retorna o estado anterior sem mudanças\n          }\n          \n          // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n          const updatedCards = prevCards.map((c) => \n            c._id === card._id ? newCard : c\n          );\n\n          return updatedCards;\n        });\n      })\n      .catch((error) => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  \n\n  function handleDeleteClick(card) {\n    setCardToDelete(card); // Define o card a ser excluído\n    setIsConfirmationPopupOpen(true); // Abre o popup de confirmação\n  }\n\n  // Função chamada após confirmação\n  function confirmDelete() {\n    if (!cardToDelete) return; // Verificação de segurança para evitar chamadas desnecessárias\n  \n    api\n      .removeCard(cardToDelete._id) // Chama a API para deletar o card\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== cardToDelete._id)); // Remove o card do estado\n  \n        setCardToDelete(null); // Limpa o card selecionado\n        setIsConfirmationPopupOpen(false); // Fecha o popup de confirmação\n      })\n      .catch((error) => console.log(\"Erro ao deletar o card:\", error));\n  }\n\nconst handleAddPlaceSubmit = (newCardData) => {\n  api.addCard(newCardData)\n    .then((newCard) => {\n      setCards((prevCards) => [newCard, ...prevCards]);\n      closeAllPopups();\n    })\n    .catch((error) => console.error('Erro ao adicionar o cartão:', error));\n};\n\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n}\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n}\n\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <BrowserRouter>\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={{ currentUser, handleUpdateUser, handleUpdateAvatar}}>\n      <Header \n        loggedIn={loggedIn}\n        userEmail={userEmail}\n        handleLogout={handleLogout}\n      />\n      <Routes>\n      <Route path=\"/signin\" element={<Login handleLogin={handleLogin} />} />\n      <Route path=\"/signup\" element={<Register />} />\n      <Route\n    path=\"/\"\n    element={\n      <ProtectedRoute\n        loggedIn={loggedIn}\n      >\n        <Main\n          cards={cards}\n          onEditAvatarClick={handleEditAvatarClick}\n          isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n          onEditProfileClick={handleEditProfileClick}\n          isEditProfilePopupOpen={isEditProfilePopupOpen}\n          onAddPlaceClick={handleAddPlaceClick}\n          isAddPlacePopupOpen={isAddPlacePopupOpen}\n          closeAllPopups={closeAllPopups}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleDeleteClick}\n        />\n        </ProtectedRoute>\n    }\n  />\n  <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n      <EditProfile\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <EditAvatar\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <NewCard\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlaceSubmit={handleAddPlaceSubmit}\n      />\n      <ConfirmationPopup\n        isOpen={isConfirmationPopupOpen}\n        onClose={() => setIsConfirmationPopupOpen(false)}\n        onConfirmationSubmit={confirmDelete}\n      />\n      {selectedCard && (\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      )}\n      <Footer />\n      </CurrentUserContext.Provider>\n  </div>\n  </BrowserRouter>\n  );\n\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}