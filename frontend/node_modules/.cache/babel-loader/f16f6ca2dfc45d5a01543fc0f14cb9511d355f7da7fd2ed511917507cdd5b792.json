{"ast":null,"code":"export default class FormValidator{constructor(config,formElement){this._config=config;this._formElement=formElement;this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector));this._submitButton=this._formElement.querySelector(this._config.submitButtonSelector);if(!this._submitButton){console.error('Botão de submit não encontrado!');}}// Exibe a mensagem de erro\n_showInputError(input,errorMessage){const errorElement=this._formElement.querySelector(`#${input.id}-error`);if(!errorElement)return;// Se o elemento de erro não existir, não faz nada\ninput.classList.add(this._config.inputErrorClass);errorElement.textContent=errorMessage;errorElement.classList.add(this._config.errorClassVisible);}// Oculta a mensagem de erro\n_hideInputError(input){const errorElement=this._formElement.querySelector(`#${input.id}-error`);if(!errorElement)return;// Se o elemento de erro não existir, não faz nada\ninput.classList.remove(this._config.inputErrorClass);errorElement.classList.remove(this._config.errorClassVisible);errorElement.textContent='';}// Verifica a validade do input e exibe a mensagem de erro\n_checkInputValidity(input){const errorElement=this._formElement.querySelector(`#${input.id}-error`);if(!input.validity.valid){this._showInputError(input,input.validationMessage);}else{this._hideInputError(input);}// Checa se o comprimento é válido\nif(input.value.trim().length===0||input.value.trim().length<2){this._checkInputLength(input,errorElement);}else{this._hideInputError(input);}}// Verifica o comprimento do input\n_checkInputLength(input,errorElement){if(!errorElement)return;if(input.value.trim().length===0){errorElement.textContent=\"Preencha este campo.\";return false;}else if(input.value.trim().length<2){errorElement.textContent=\"O campo deve ter pelo menos 2 caracteres.\";return false;}else{errorElement.textContent=\"\";return true;}}// Verifica se algum input é inválido\n_hasInvalidInput(){return this._inputList.some(input=>!input.validity.valid);}// Atualiza o estado do botão de submit\n_toggleButtonState(){if(!this._submitButton)return;if(this._hasInvalidInput()){this._submitButton.classList.add(this._config.inactiveButtonClass);this._submitButton.setAttribute('disabled',true);}else{this._submitButton.classList.remove(this._config.inactiveButtonClass);this._submitButton.removeAttribute('disabled');}}// Define ouvintes de eventos para os inputs\n_setEventListeners(){this._inputList.forEach(input=>{input.addEventListener('input',()=>{this._checkInputValidity(input);this._toggleButtonState();});});}// Ativa a validação\nenableValidation(){this._formElement.addEventListener('submit',evt=>evt.preventDefault());this._setEventListeners();this._toggleButtonState();// Estado inicial do botão\n}// Reseta a validação (limpa erros e reabilita o botão)\nresetValidation(){this._inputList.forEach(input=>this._hideInputError(input));this._toggleButtonState();}}","map":{"version":3,"names":["FormValidator","constructor","config","formElement","_config","_formElement","_inputList","Array","from","querySelectorAll","inputSelector","_submitButton","querySelector","submitButtonSelector","console","error","_showInputError","input","errorMessage","errorElement","id","classList","add","inputErrorClass","textContent","errorClassVisible","_hideInputError","remove","_checkInputValidity","validity","valid","validationMessage","value","trim","length","_checkInputLength","_hasInvalidInput","some","_toggleButtonState","inactiveButtonClass","setAttribute","removeAttribute","_setEventListeners","forEach","addEventListener","enableValidation","evt","preventDefault","resetValidation"],"sources":["/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/utils/FormValidator.js"],"sourcesContent":["export default class FormValidator {\n  constructor(config, formElement) {\n    this._config = config;\n    this._formElement = formElement;\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._config.inputSelector));\n    this._submitButton = this._formElement.querySelector(this._config.submitButtonSelector);\n\n    if (!this._submitButton) {\n      console.error('Botão de submit não encontrado!');\n    }\n  }\n\n  // Exibe a mensagem de erro\n  _showInputError(input, errorMessage) {\n    const errorElement = this._formElement.querySelector(`#${input.id}-error`);\n    if (!errorElement) return; // Se o elemento de erro não existir, não faz nada\n    input.classList.add(this._config.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._config.errorClassVisible);\n  }\n\n  // Oculta a mensagem de erro\n  _hideInputError(input) {\n    const errorElement = this._formElement.querySelector(`#${input.id}-error`);\n    if (!errorElement) return; // Se o elemento de erro não existir, não faz nada\n    input.classList.remove(this._config.inputErrorClass);\n    errorElement.classList.remove(this._config.errorClassVisible);\n    errorElement.textContent = '';\n  }\n\n  // Verifica a validade do input e exibe a mensagem de erro\n  _checkInputValidity(input) {\n    const errorElement = this._formElement.querySelector(`#${input.id}-error`);\n    if (!input.validity.valid) {\n      this._showInputError(input, input.validationMessage);\n    } else {\n      this._hideInputError(input);\n    }\n\n    // Checa se o comprimento é válido\n    if (input.value.trim().length === 0 || input.value.trim().length < 2) {\n      this._checkInputLength(input, errorElement);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n  // Verifica o comprimento do input\n  _checkInputLength(input, errorElement) {\n    if (!errorElement) return;\n\n    if (input.value.trim().length === 0) {\n      errorElement.textContent = \"Preencha este campo.\";\n      return false;\n    } else if (input.value.trim().length < 2) {\n      errorElement.textContent = \"O campo deve ter pelo menos 2 caracteres.\";\n      return false;\n    } else {\n      errorElement.textContent = \"\";\n      return true;\n    }\n  }\n\n  // Verifica se algum input é inválido\n  _hasInvalidInput() {\n    return this._inputList.some((input) => !input.validity.valid);\n  }\n\n  // Atualiza o estado do botão de submit\n  _toggleButtonState() {\n    if (!this._submitButton) return;\n\n    if (this._hasInvalidInput()) {\n      this._submitButton.classList.add(this._config.inactiveButtonClass);\n      this._submitButton.setAttribute('disabled', true);\n    } else {\n      this._submitButton.classList.remove(this._config.inactiveButtonClass);\n      this._submitButton.removeAttribute('disabled');\n    }\n  }\n\n  // Define ouvintes de eventos para os inputs\n  _setEventListeners() {\n    this._inputList.forEach((input) => {\n      input.addEventListener('input', () => {\n        this._checkInputValidity(input);\n        this._toggleButtonState();\n      });\n    });\n  }\n\n  // Ativa a validação\n  enableValidation() {\n    this._formElement.addEventListener('submit', (evt) => evt.preventDefault());\n    this._setEventListeners();\n    this._toggleButtonState();  // Estado inicial do botão\n  }\n\n  // Reseta a validação (limpa erros e reabilita o botão)\n  resetValidation() {\n    this._inputList.forEach((input) => this._hideInputError(input));\n    this._toggleButtonState();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}