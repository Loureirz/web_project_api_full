{"ast":null,"code":"var _jsxFileName = \"/Users/yuriloureiro/Projects/web_project_around_react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./header/Header.js\";\nimport Main from \"./main/Main.js\";\nimport Footer from \"./footer/Footer.js\";\nimport api from \"../utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./main/components/popup/imagePopup/ImagePopup.js\";\nimport EditProfile from \"./main/components/popup/editProfile/EditProfile.js\";\nimport EditAvatar from \"./main/components/popup/editAvatar/EditAvatar.js\";\nimport AddPlacePopup from \"./NewCard/NewCard.js\";\nimport ConfirmationPopup from \"./popup/removeCard/RemoveCard.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    name: \"\",\n    about: \"\"\n  });\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getUserInfo().then(data => {\n      console.log('Dados do usuário obtidos:', data); // Verifica os dados retornados\n      setCurrentUser(data);\n    }).catch(error => {\n      console.log('Erro ao obter dados do usuário:', error);\n    });\n    api.getInitialCards().then(setCards).catch(error => console.log('Erro ao obter dados dos cards:', error));\n  }, []);\n  const handleUpdateUser = userData => {\n    if (!userData.name || !userData.about) {\n      console.log('Erro: nome ou descrição ausentes');\n      return; // Não envia a requisição se os dados estiverem incompletos\n    }\n    api.editUserInfo(userData).then(userInfo => {\n      setCurrentUser(userInfo); // Atualiza os dados do usuário\n      closeAllPopups(); // Fecha o popup\n    }).catch(error => {\n      console.log('Erro ao atualizar o perfil:', error);\n    });\n  };\n  const handleUpdateAvatar = data => {\n    (async () => {\n      await api.editAvatar(data).then(newData => {\n        setCurrentUser(newData); // Atualiza o avatar do usuário localmente\n        closeAllPopups(); // Fecha o pop-up após a atualização\n      }).catch(error => console.error(\"Erro ao atualizar o avatar:\", error));\n    })();\n  };\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    console.log(\"Estado atual do like antes da API:\", isLiked);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      console.log(\"Novo card atualizado:\", newCard); // Confirma o card atualizado\n\n      // Atualiza o estado de cards, substituindo apenas o card que mudou\n      setCards(prevCards => {\n        if (prevCards.length === 0) {\n          console.log(\"Erro: Nenhum card encontrado no estado atual.\");\n          return prevCards; // Retorna o estado anterior sem mudanças\n        }\n\n        // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n        const updatedCards = prevCards.map(c => c._id === card._id ? newCard : c);\n        console.log(\"Novo estado de cards após atualização:\", updatedCards);\n        return updatedCards;\n      });\n    }).catch(error => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  function handleDeleteClick(card) {\n    setCardToDelete(card); // Define o card a ser excluído\n    setIsConfirmationPopupOpen(true); // Abre o popup de confirmação\n  }\n\n  // Função chamada após confirmação\n  function confirmDelete() {\n    if (!cardToDelete) return; // Verificação de segurança para evitar chamadas desnecessárias\n\n    api.removeCard(cardToDelete._id) // Chama a API para deletar o card\n    .then(() => {\n      setCards(state => state.filter(c => c._id !== cardToDelete._id)); // Remove o card do estado\n\n      setCardToDelete(null); // Limpa o card selecionado\n      setIsConfirmationPopupOpen(false); // Fecha o popup de confirmação\n    }).catch(error => console.log(\"Erro ao deletar o card:\", error));\n  }\n  const handleAddPlaceSubmit = newCardData => {\n    api.addCard(newCardData).then(newCard => {\n      setCards(prevCards => [newCard, ...prevCards]);\n      closeAllPopups();\n    }).catch(error => console.error('Erro ao adicionar o cartão:', error));\n  };\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: {\n        currentUser,\n        handleUpdateUser,\n        handleUpdateAvatar\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        cards: cards,\n        onEditAvatarClick: handleEditAvatarClick,\n        isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n        onEditProfileClick: handleEditProfileClick,\n        isEditProfilePopupOpen: isEditProfilePopupOpen,\n        onAddPlaceClick: handleAddPlaceClick,\n        isAddPlacePopupOpen: isAddPlacePopupOpen,\n        closeAllPopups: closeAllPopups,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfile, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatar, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlaceSubmit: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n        isOpen: isConfirmationPopupOpen,\n        onClose: () => setIsConfirmationPopupOpen(false),\n        onConfirmationSubmit: confirmDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this), selectedCard && /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4jX9w4Z30tp9fylixXVnc51hr1A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","api","useEffect","useState","ImagePopup","EditProfile","EditAvatar","AddPlacePopup","ConfirmationPopup","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","cardToDelete","setCardToDelete","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","getUserInfo","then","data","console","log","catch","error","getInitialCards","handleUpdateUser","userData","editUserInfo","userInfo","closeAllPopups","handleUpdateAvatar","editAvatar","newData","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","prevCards","length","updatedCards","map","c","handleDeleteClick","confirmDelete","removeCard","state","filter","handleAddPlaceSubmit","newCardData","addCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","onCardClick","onCardLike","onCardDelete","isOpen","onClose","onUpdateUser","onUpdateAvatar","onAddPlaceSubmit","onConfirmationSubmit","_c","$RefreshReg$"],"sources":["/Users/yuriloureiro/Projects/web_project_around_react/src/components/App.js"],"sourcesContent":["import Header from \"./header/Header.js\";\nimport Main from \"./main/Main.js\";\nimport Footer from \"./footer/Footer.js\";\nimport api from \"../utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./main/components/popup/imagePopup/ImagePopup.js\";\nimport EditProfile from \"./main/components/popup/editProfile/EditProfile.js\";\nimport EditAvatar from \"./main/components/popup/editAvatar/EditAvatar.js\";\nimport AddPlacePopup from \"./NewCard/NewCard.js\";\nimport ConfirmationPopup from \"./popup/removeCard/RemoveCard.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({ name: \"\", about: \"\" });\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        console.log('Dados do usuário obtidos:', data); // Verifica os dados retornados\n        setCurrentUser(data);\n      })\n      .catch((error) => {\n        console.log('Erro ao obter dados do usuário:', error);\n      });\n  \n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch((error) => console.log('Erro ao obter dados dos cards:', error));\n  }, []);\n\n    const handleUpdateUser = (userData) => {\n      if (!userData.name || !userData.about) {\n        console.log('Erro: nome ou descrição ausentes');\n        return; // Não envia a requisição se os dados estiverem incompletos\n      }\n    \n      api.editUserInfo(userData)\n        .then((userInfo) => {\n          setCurrentUser(userInfo); // Atualiza os dados do usuário\n          closeAllPopups(); // Fecha o popup\n        })\n        .catch((error) => {\n          console.log('Erro ao atualizar o perfil:', error);\n        });\n    };\n\n    const handleUpdateAvatar = (data) => {\n      (async () => {\n        await api\n          .editAvatar(data)\n          .then((newData) => {\n            setCurrentUser(newData); // Atualiza o avatar do usuário localmente\n            closeAllPopups(); // Fecha o pop-up após a atualização\n          })\n          .catch((error) => console.error(\"Erro ao atualizar o avatar:\", error));\n      })();\n    };\n  \n\n  const handleCardClick = (card) => {\n    setSelectedCard(card)\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    console.log(\"Estado atual do like antes da API:\", isLiked);\n  \n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        console.log(\"Novo card atualizado:\", newCard); // Confirma o card atualizado\n  \n        // Atualiza o estado de cards, substituindo apenas o card que mudou\n        setCards((prevCards) => {\n          if (prevCards.length === 0) {\n            console.log(\"Erro: Nenhum card encontrado no estado atual.\");\n            return prevCards; // Retorna o estado anterior sem mudanças\n          }\n          \n          // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n          const updatedCards = prevCards.map((c) => \n            c._id === card._id ? newCard : c\n          );\n  \n          console.log(\"Novo estado de cards após atualização:\", updatedCards);\n          return updatedCards;\n        });\n      })\n      .catch((error) => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  \n\n  function handleDeleteClick(card) {\n    setCardToDelete(card); // Define o card a ser excluído\n    setIsConfirmationPopupOpen(true); // Abre o popup de confirmação\n  }\n\n  // Função chamada após confirmação\n  function confirmDelete() {\n    if (!cardToDelete) return; // Verificação de segurança para evitar chamadas desnecessárias\n  \n    api\n      .removeCard(cardToDelete._id) // Chama a API para deletar o card\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== cardToDelete._id)); // Remove o card do estado\n  \n        setCardToDelete(null); // Limpa o card selecionado\n        setIsConfirmationPopupOpen(false); // Fecha o popup de confirmação\n      })\n      .catch((error) => console.log(\"Erro ao deletar o card:\", error));\n  }\n\nconst handleAddPlaceSubmit = (newCardData) => {\n  api.addCard(newCardData)\n    .then((newCard) => {\n      setCards((prevCards) => [newCard, ...prevCards]);\n      closeAllPopups();\n    })\n    .catch((error) => console.error('Erro ao adicionar o cartão:', error));\n};\n\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n}\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n}\n\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={{ currentUser, handleUpdateUser, handleUpdateAvatar}}>\n      <Header />\n      <Main \n      cards={cards}\n      onEditAvatarClick={handleEditAvatarClick} \n      isEditAvatarPopupOpen={isEditAvatarPopupOpen} \n      onEditProfileClick={handleEditProfileClick} \n      isEditProfilePopupOpen={isEditProfilePopupOpen} \n      onAddPlaceClick={handleAddPlaceClick} \n      isAddPlacePopupOpen={isAddPlacePopupOpen} \n      closeAllPopups={closeAllPopups}\n      onCardClick={handleCardClick}\n      onCardLike={handleCardLike}\n      onCardDelete={handleDeleteClick}\n      />\n      <EditProfile\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <EditAvatar\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlaceSubmit={handleAddPlaceSubmit}\n      />\n      <ConfirmationPopup\n        isOpen={isConfirmationPopupOpen}\n        onClose={() => setIsConfirmationPopupOpen(false)}\n        onConfirmationSubmit={confirmDelete}\n      />\n      {selectedCard && (\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      )}\n      <Footer />\n      </CurrentUserContext.Provider>\n  </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}