{"ast":null,"code":"var _jsxFileName = \"/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport { Route, Routes, useNavigate, Navigate } from \"react-router-dom\";\nimport Header from \"./Header.jsx\";\nimport Main from \"./Main.jsx\";\nimport Footer from \"./Footer.jsx\";\nimport api from \"../utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./ImagePopup.jsx\";\nimport EditProfile from \"./EditProfile.jsx\";\nimport EditAvatar from \"./EditAvatar.jsx\";\nimport NewCard from \"./NewCard.jsx\";\nimport Register from \"./Register.jsx\";\nimport Login from \"./Login.jsx\";\nimport ProtectedRoute from \"./ProtectedRoute.jsx\";\nimport ConfirmationPopup from \"./RemoveCard.jsx\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport * as auth from \"../utils/auth.js\";\nimport * as token from \"../utils/token.js\";\nimport { removeToken } from \"../utils/token.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState({\n    email: \"\"\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const jwt = token.getToken();\n    if (jwt) {\n      auth.checkToken(jwt).then(data => {\n        setUserEmail(data.data.email);\n        setLoggedIn(true);\n        setCurrentUser(data);\n        navigate(\"/\");\n        api.getInitialCards().then(data => {\n          setCards(data.data);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      api.getUserInfo().then(data => {\n        setCurrentUser(data);\n      }).catch(error => {\n        console.error('Erro ao obter dados do usuário:', error);\n      });\n      api.getInitialCards().then(setCards).catch(error => console.log('Erro ao obter dados dos cards:', error));\n    } else {\n      setLoggedIn(false);\n    }\n  }, [loggedIn]);\n  const handleUpdateUser = userData => {\n    if (!userData.name || !userData.about) {\n      console.log('Erro: nome ou descrição ausentes');\n      return; // Não envia a requisição se os dados estiverem incompletos\n    }\n    api.editUserInfo(userData).then(userInfo => {\n      setCurrentUser(userInfo); // Atualiza os dados do usuário\n      closeAllPopups(); // Fecha o popup\n    }).catch(error => {\n      console.log('Erro ao atualizar o perfil:', error);\n    });\n  };\n\n  /*const handleLogin = (email) => {\n    setLoggedIn(true);\n    setUserEmail(email);\n    localStorage.setItem(\"loggedIn\", \"true\");\n    localStorage.setItem(\"userEmail\", email);\n  };*/\n\n  const handleLogin = (email, password) => {\n    auth.signin(email, password).then(data => {\n      console.log(\"Resposta da API:\", data);\n      if (data.token) {\n        token.setToken(data.token);\n        setLoggedIn(true);\n        setUserEmail(email);\n        navigate(\"/\");\n      }\n    }).catch(error => console.log(error));\n  };\n  const handleLogout = () => {\n    removeToken();\n    setLoggedIn(false);\n  };\n  const handleUpdateAvatar = data => {\n    (async () => {\n      await api.editAvatar(data).then(newData => {\n        setCurrentUser(newData); // Atualiza o avatar do usuário localmente\n        closeAllPopups(); // Fecha o pop-up após a atualização\n      }).catch(error => console.error(\"Erro ao atualizar o avatar:\", error));\n    })();\n  };\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      // Atualiza o estado de cards, substituindo apenas o card que mudou\n      setCards(prevCards => {\n        if (prevCards.length === 0) {\n          return prevCards; // Retorna o estado anterior sem mudanças\n        }\n\n        // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n        const updatedCards = prevCards.map(c => c._id === card._id ? newCard : c);\n        return updatedCards;\n      });\n    }).catch(error => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  function handleDeleteClick(card) {\n    setCardToDelete(card); // Define o card a ser excluído\n    setIsConfirmationPopupOpen(true); // Abre o popup de confirmação\n  }\n\n  // Função chamada após confirmação\n  function confirmDelete() {\n    if (!cardToDelete) return; // Verificação de segurança para evitar chamadas desnecessárias\n\n    api.removeCard(cardToDelete._id) // Chama a API para deletar o card\n    .then(() => {\n      setCards(state => state.filter(c => c._id !== cardToDelete._id)); // Remove o card do estado\n\n      setCardToDelete(null); // Limpa o card selecionado\n      setIsConfirmationPopupOpen(false); // Fecha o popup de confirmação\n    }).catch(error => console.log(\"Erro ao deletar o card:\", error));\n  }\n  const handleAddPlaceSubmit = newCardData => {\n    api.addCard(newCardData).then(newCard => {\n      setCards(prevCards => [newCard, ...prevCards]);\n      closeAllPopups();\n    }).catch(error => console.error('Erro ao adicionar o cartão:', error));\n  };\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: {\n        currentUser,\n        handleUpdateUser,\n        handleUpdateAvatar\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        userEmail: userEmail,\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            loggedIn: loggedIn,\n            children: /*#__PURE__*/_jsxDEV(Main, {\n              cards: cards,\n              onEditAvatarClick: handleEditAvatarClick,\n              isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n              onEditProfileClick: handleEditProfileClick,\n              isEditProfilePopupOpen: isEditProfilePopupOpen,\n              onAddPlaceClick: handleAddPlaceClick,\n              isAddPlacePopupOpen: isAddPlacePopupOpen,\n              closeAllPopups: closeAllPopups,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfile, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatar, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NewCard, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlaceSubmit: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n        isOpen: isConfirmationPopupOpen,\n        onClose: () => setIsConfirmationPopupOpen(false),\n        onConfirmationSubmit: confirmDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 7\n      }, this), selectedCard && /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0gOVdk1ehyf6Z7Fe6E3woQEMsVk=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","useNavigate","Navigate","Header","Main","Footer","api","useEffect","useState","ImagePopup","EditProfile","EditAvatar","NewCard","Register","Login","ProtectedRoute","ConfirmationPopup","CurrentUserContext","auth","token","removeToken","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","cardToDelete","setCardToDelete","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","userEmail","setUserEmail","email","navigate","jwt","getToken","checkToken","then","data","getInitialCards","catch","error","console","log","getUserInfo","handleUpdateUser","userData","name","about","editUserInfo","userInfo","closeAllPopups","handleLogin","password","signin","setToken","handleLogout","handleUpdateAvatar","editAvatar","newData","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","prevCards","length","updatedCards","map","c","handleDeleteClick","confirmDelete","removeCard","state","filter","handleAddPlaceSubmit","newCardData","addCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","onCardClick","onCardLike","onCardDelete","to","replace","isOpen","onClose","onUpdateUser","onUpdateAvatar","onAddPlaceSubmit","onConfirmationSubmit","_c","$RefreshReg$"],"sources":["/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/components/App.jsx"],"sourcesContent":["import { Route, Routes, useNavigate, Navigate } from \"react-router-dom\";\nimport Header from \"./Header.jsx\";\nimport Main from \"./Main.jsx\";\nimport Footer from \"./Footer.jsx\";\nimport api from \"../utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./ImagePopup.jsx\";\nimport EditProfile from \"./EditProfile.jsx\";\nimport EditAvatar from \"./EditAvatar.jsx\";\nimport NewCard from \"./NewCard.jsx\";\nimport Register from \"./Register.jsx\";\nimport Login from \"./Login.jsx\";\nimport ProtectedRoute from \"./ProtectedRoute.jsx\";\nimport ConfirmationPopup from \"./RemoveCard.jsx\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport * as auth from \"../utils/auth.js\";\nimport * as token from \"../utils/token.js\";\nimport { removeToken } from \"../utils/token.js\";\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false); \n  const [userEmail, setUserEmail] = useState({ email: \"\" });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const jwt = token.getToken();\n\n    if (jwt) {\n\n      auth\n        .checkToken(jwt)\n        .then(( data ) => {\n          setUserEmail(data.data.email);\n          setLoggedIn(true);\n          setCurrentUser(data);\n          navigate(\"/\");\n          api.getInitialCards().then(data=> {\n            setCards(data.data);\n          });\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n\n        api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((error) => {\n        console.error('Erro ao obter dados do usuário:', error);\n      });\n  \n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch((error) => console.log('Erro ao obter dados dos cards:', error));\n\n    } else {\n      setLoggedIn(false);\n    }\n  }, [loggedIn]);\n\n    const handleUpdateUser = (userData) => {\n      if (!userData.name || !userData.about) {\n        console.log('Erro: nome ou descrição ausentes');\n        return; // Não envia a requisição se os dados estiverem incompletos\n      }\n    \n      api.editUserInfo(userData)\n        .then((userInfo) => {\n          setCurrentUser(userInfo); // Atualiza os dados do usuário\n          closeAllPopups(); // Fecha o popup\n        })\n        .catch((error) => {\n          console.log('Erro ao atualizar o perfil:', error);\n        });\n    };\n\n    /*const handleLogin = (email) => {\n      setLoggedIn(true);\n      setUserEmail(email);\n      localStorage.setItem(\"loggedIn\", \"true\");\n      localStorage.setItem(\"userEmail\", email);\n    };*/\n\n    const handleLogin = (email, password) => {\n\n      auth\n        .signin(email, password)\n          .then((data) => {\n            console.log(\"Resposta da API:\", data);\n            if (data.token) {\n              token.setToken(data.token);\n              setLoggedIn(true);\n              setUserEmail(email);\n              navigate(\"/\");\n            }\n          })\n          .catch((error) => console.log(error));\n    }\n  \n    const handleLogout = () => {\n      removeToken();\n      setLoggedIn(false);\n    };\n\n    const handleUpdateAvatar = (data) => {\n      (async () => {\n        await api\n          .editAvatar(data)\n          .then((newData) => {\n            setCurrentUser(newData); // Atualiza o avatar do usuário localmente\n            closeAllPopups(); // Fecha o pop-up após a atualização\n          })\n          .catch((error) => console.error(\"Erro ao atualizar o avatar:\", error));\n      })();\n    };\n  \n\n  const handleCardClick = (card) => {\n    setSelectedCard(card)\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  \n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n  \n        // Atualiza o estado de cards, substituindo apenas o card que mudou\n        setCards((prevCards) => {\n          if (prevCards.length === 0) {\n            return prevCards; // Retorna o estado anterior sem mudanças\n          }\n          \n          // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n          const updatedCards = prevCards.map((c) => \n            c._id === card._id ? newCard : c\n          );\n\n          return updatedCards;\n        });\n      })\n      .catch((error) => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  \n\n  function handleDeleteClick(card) {\n    setCardToDelete(card); // Define o card a ser excluído\n    setIsConfirmationPopupOpen(true); // Abre o popup de confirmação\n  }\n\n  // Função chamada após confirmação\n  function confirmDelete() {\n    if (!cardToDelete) return; // Verificação de segurança para evitar chamadas desnecessárias\n  \n    api\n      .removeCard(cardToDelete._id) // Chama a API para deletar o card\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== cardToDelete._id)); // Remove o card do estado\n  \n        setCardToDelete(null); // Limpa o card selecionado\n        setIsConfirmationPopupOpen(false); // Fecha o popup de confirmação\n      })\n      .catch((error) => console.log(\"Erro ao deletar o card:\", error));\n  }\n\nconst handleAddPlaceSubmit = (newCardData) => {\n  api.addCard(newCardData)\n    .then((newCard) => {\n      setCards((prevCards) => [newCard, ...prevCards]);\n      closeAllPopups();\n    })\n    .catch((error) => console.error('Erro ao adicionar o cartão:', error));\n};\n\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n}\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n}\n\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={{ currentUser, handleUpdateUser, handleUpdateAvatar}}>\n      <Header \n        loggedIn={loggedIn}\n        userEmail={userEmail}\n        handleLogout={handleLogout}\n      />\n      <Routes>\n      <Route\n    path=\"/\"\n    element={\n      <ProtectedRoute loggedIn={loggedIn}>\n        <Main\n          cards={cards}\n          onEditAvatarClick={handleEditAvatarClick}\n          isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n          onEditProfileClick={handleEditProfileClick}\n          isEditProfilePopupOpen={isEditProfilePopupOpen}\n          onAddPlaceClick={handleAddPlaceClick}\n          isAddPlacePopupOpen={isAddPlacePopupOpen}\n          closeAllPopups={closeAllPopups}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleDeleteClick}\n        />\n        </ProtectedRoute>\n    }\n  />\n  <Route path=\"/signin\" element={<Login handleLogin={handleLogin} />} />\n  <Route path=\"/signup\" element={<Register />} />\n  <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n      <EditProfile\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <EditAvatar\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <NewCard\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlaceSubmit={handleAddPlaceSubmit}\n      />\n      <ConfirmationPopup\n        isOpen={isConfirmationPopupOpen}\n        onClose={() => setIsConfirmationPopupOpen(false)}\n        onConfirmationSubmit={confirmDelete}\n      />\n      {selectedCard && (\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      )}\n      <Footer />\n      </CurrentUserContext.Provider>\n  </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,kBAAkB;AACvE,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,iBAAiB,MAAM,kBAAkB;AAChD,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,OAAO,KAAKC,IAAI,MAAM,kBAAkB;AACxC,OAAO,KAAKC,KAAK,MAAM,mBAAmB;AAC1C,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACmB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACqB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACuB,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC6B,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC;IAAEqC,KAAK,EAAE;EAAG,CAAC,CAAC;EACzD,MAAMC,QAAQ,GAAG7C,WAAW,CAAC,CAAC;EAE9BM,SAAS,CAAC,MAAM;IACd,MAAMwC,GAAG,GAAG5B,KAAK,CAAC6B,QAAQ,CAAC,CAAC;IAE5B,IAAID,GAAG,EAAE;MAEP7B,IAAI,CACD+B,UAAU,CAACF,GAAG,CAAC,CACfG,IAAI,CAAGC,IAAI,IAAM;QAChBP,YAAY,CAACO,IAAI,CAACA,IAAI,CAACN,KAAK,CAAC;QAC7BH,WAAW,CAAC,IAAI,CAAC;QACjBJ,cAAc,CAACa,IAAI,CAAC;QACpBL,QAAQ,CAAC,GAAG,CAAC;QACbxC,GAAG,CAAC8C,eAAe,CAAC,CAAC,CAACF,IAAI,CAACC,IAAI,IAAG;UAChCX,QAAQ,CAACW,IAAI,CAACA,IAAI,CAAC;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;MAEFhD,GAAG,CACJmD,WAAW,CAAC,CAAC,CACbP,IAAI,CAAEC,IAAI,IAAK;QACdb,cAAc,CAACa,IAAI,CAAC;MACtB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CAAC,CAAC;MAEJhD,GAAG,CACA8C,eAAe,CAAC,CAAC,CACjBF,IAAI,CAACV,QAAQ,CAAC,CACda,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,KAAK,CAAC,CAAC;IAEzE,CAAC,MAAM;MACLZ,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEZ,MAAMiB,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,IAAI,CAACA,QAAQ,CAACC,IAAI,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;MACrCN,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,OAAO,CAAC;IACV;IAEAlD,GAAG,CAACwD,YAAY,CAACH,QAAQ,CAAC,CACvBT,IAAI,CAAEa,QAAQ,IAAK;MAClBzB,cAAc,CAACyB,QAAQ,CAAC,CAAC,CAAC;MAC1BC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDX,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;;EAEI,MAAMW,WAAW,GAAGA,CAACpB,KAAK,EAAEqB,QAAQ,KAAK;IAEvChD,IAAI,CACDiD,MAAM,CAACtB,KAAK,EAAEqB,QAAQ,CAAC,CACrBhB,IAAI,CAAEC,IAAI,IAAK;MACdI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,IAAI,CAAC;MACrC,IAAIA,IAAI,CAAChC,KAAK,EAAE;QACdA,KAAK,CAACiD,QAAQ,CAACjB,IAAI,CAAChC,KAAK,CAAC;QAC1BuB,WAAW,CAAC,IAAI,CAAC;QACjBE,YAAY,CAACC,KAAK,CAAC;QACnBC,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzBjD,WAAW,CAAC,CAAC;IACbsB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAM4B,kBAAkB,GAAInB,IAAI,IAAK;IACnC,CAAC,YAAY;MACX,MAAM7C,GAAG,CACNiE,UAAU,CAACpB,IAAI,CAAC,CAChBD,IAAI,CAAEsB,OAAO,IAAK;QACjBlC,cAAc,CAACkC,OAAO,CAAC,CAAC,CAAC;QACzBR,cAAc,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CACDX,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;IAC1E,CAAC,EAAE,CAAC;EACN,CAAC;EAGH,MAAMmB,eAAe,GAAIC,IAAI,IAAK;IAChCtC,eAAe,CAACsC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,cAAc,GAAID,IAAI,IAAK;IAC/B,MAAME,OAAO,GAAGF,IAAI,CAACG,KAAK,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAK3C,WAAW,CAAC2C,GAAG,CAAC;IAEjE1E,GAAG,CACA2E,oBAAoB,CAACP,IAAI,CAACM,GAAG,EAAEJ,OAAO,CAAC,CACvC1B,IAAI,CAAEgC,OAAO,IAAK;MAEjB;MACA1C,QAAQ,CAAE2C,SAAS,IAAK;QACtB,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;UAC1B,OAAOD,SAAS,CAAC,CAAC;QACpB;;QAEA;QACA,MAAME,YAAY,GAAGF,SAAS,CAACG,GAAG,CAAEC,CAAC,IACnCA,CAAC,CAACP,GAAG,KAAKN,IAAI,CAACM,GAAG,GAAGE,OAAO,GAAGK,CACjC,CAAC;QAED,OAAOF,YAAY;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDhC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,KAAK,CAAC,CAAC;EACtE,CAAC;EAGD,SAASkC,iBAAiBA,CAACd,IAAI,EAAE;IAC/BxC,eAAe,CAACwC,IAAI,CAAC,CAAC,CAAC;IACvB1C,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;EACpC;;EAEA;EACA,SAASyD,aAAaA,CAAA,EAAG;IACvB,IAAI,CAACxD,YAAY,EAAE,OAAO,CAAC;;IAE3B3B,GAAG,CACAoF,UAAU,CAACzD,YAAY,CAAC+C,GAAG,CAAC,CAAC;IAAA,CAC7B9B,IAAI,CAAC,MAAM;MACVV,QAAQ,CAAEmD,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAEL,CAAC,IAAKA,CAAC,CAACP,GAAG,KAAK/C,YAAY,CAAC+C,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEtE9C,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;MACvBF,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CACDqB,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC,CAAC;EACpE;EAEF,MAAMuC,oBAAoB,GAAIC,WAAW,IAAK;IAC5CxF,GAAG,CAACyF,OAAO,CAACD,WAAW,CAAC,CACrB5C,IAAI,CAAEgC,OAAO,IAAK;MACjB1C,QAAQ,CAAE2C,SAAS,IAAK,CAACD,OAAO,EAAE,GAAGC,SAAS,CAAC,CAAC;MAChDnB,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACDX,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC;EAGC,MAAM0C,qBAAqB,GAAGA,CAAA,KAAM;IAClClE,wBAAwB,CAAC,IAAI,CAAC;EAClC,CAAC;EAEC,MAAMmE,sBAAsB,GAAGA,CAAA,KAAM;IACnCvE,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,MAAMwE,mBAAmB,GAAGA,CAAA,KAAM;IAChCtE,sBAAsB,CAAC,IAAI,CAAC;EAChC,CAAC;EAEC,MAAMoC,cAAc,GAAGA,CAAA,KAAM;IAC3BpC,sBAAsB,CAAC,KAAK,CAAC;IAC7BE,wBAAwB,CAAC,KAAK,CAAC;IAC/BJ,yBAAyB,CAAC,KAAK,CAAC;IAChCU,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEd,OAAA;IAAK6E,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnB9E,OAAA,CAACL,kBAAkB,CAACoF,QAAQ;MAACC,KAAK,EAAE;QAAEjE,WAAW;QAAEqB,gBAAgB;QAAEY;MAAkB,CAAE;MAAA8B,QAAA,gBACzF9E,OAAA,CAACnB,MAAM;QACLsC,QAAQ,EAAEA,QAAS;QACnBE,SAAS,EAAEA,SAAU;QACrB0B,YAAY,EAAEA;MAAa;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFpF,OAAA,CAACtB,MAAM;QAAAoG,QAAA,gBACP9E,OAAA,CAACvB,KAAK;UACR4G,IAAI,EAAC,GAAG;UACRC,OAAO,eACLtF,OAAA,CAACP,cAAc;YAAC0B,QAAQ,EAAEA,QAAS;YAAA2D,QAAA,eACjC9E,OAAA,CAAClB,IAAI;cACHmC,KAAK,EAAEA,KAAM;cACbsE,iBAAiB,EAAEb,qBAAsB;cACzCnE,qBAAqB,EAAEA,qBAAsB;cAC7CiF,kBAAkB,EAAEb,sBAAuB;cAC3CxE,sBAAsB,EAAEA,sBAAuB;cAC/CsF,eAAe,EAAEb,mBAAoB;cACrCvE,mBAAmB,EAAEA,mBAAoB;cACzCqC,cAAc,EAAEA,cAAe;cAC/BgD,WAAW,EAAEvC,eAAgB;cAC7BwC,UAAU,EAAEtC,cAAe;cAC3BuC,YAAY,EAAE1B;YAAkB;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACc;QACnB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFpF,OAAA,CAACvB,KAAK;UAAC4G,IAAI,EAAC,SAAS;UAACC,OAAO,eAAEtF,OAAA,CAACR,KAAK;YAACmD,WAAW,EAAEA;UAAY;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtEpF,OAAA,CAACvB,KAAK;UAAC4G,IAAI,EAAC,SAAS;UAACC,OAAO,eAAEtF,OAAA,CAACT,QAAQ;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/CpF,OAAA,CAACvB,KAAK;UAAC4G,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEtF,OAAA,CAACpB,QAAQ;YAACiH,EAAE,EAAC,GAAG;YAACC,OAAO;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACTpF,OAAA,CAACZ,WAAW;QACV2G,MAAM,EAAE5F,sBAAuB;QAC/B6F,OAAO,EAAEtD,cAAe;QACxBuD,YAAY,EAAE7D;MAAiB;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFpF,OAAA,CAACX,UAAU;QACT0G,MAAM,EAAExF,qBAAsB;QAC9ByF,OAAO,EAAEtD,cAAe;QACxBwD,cAAc,EAAElD;MAAmB;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFpF,OAAA,CAACV,OAAO;QACNyG,MAAM,EAAE1F,mBAAoB;QAC5B2F,OAAO,EAAEtD,cAAe;QACxByD,gBAAgB,EAAE5B;MAAqB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFpF,OAAA,CAACN,iBAAiB;QAChBqG,MAAM,EAAEtF,uBAAwB;QAChCuF,OAAO,EAAEA,CAAA,KAAMtF,0BAA0B,CAAC,KAAK,CAAE;QACjD0F,oBAAoB,EAAEjC;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EACDvE,YAAY,iBACXb,OAAA,CAACb,UAAU;QAACiE,IAAI,EAAEvC,YAAa;QAACmF,OAAO,EAAEtD;MAAe;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC3D,eACDpF,OAAA,CAACjB,MAAM;QAAAkG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACmB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAGR;AAAClF,EAAA,CAzPQD,GAAG;EAAA,QAYOtB,WAAW;AAAA;AAAA0H,EAAA,GAZrBpG,GAAG;AA2PZ,eAAeA,GAAG;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}