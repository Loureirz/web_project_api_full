{"ast":null,"code":"const BASE_URL=\"https://web-project-api-full-daen.onrender.com\";export const signup=async(email,password)=>{try{const response=await fetch(`${BASE_URL}/signup`,{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message);}const data=await response.json();return data.token;}catch(error){throw error;}};export const signin=async(email,password)=>{try{const response=await fetch(`${BASE_URL}/signin`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message);}const{token}=await response.json();localStorage.setItem(\"jwt\",token);return token;}catch(error){throw error;}};export const checkToken=async token=>{try{const response=await fetch(`${BASE_URL}/users/me`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message);}const data=await response.json();return data;}catch(error){throw error;}};","map":{"version":3,"names":["BASE_URL","signup","email","password","response","fetch","method","headers","Accept","body","JSON","stringify","ok","errorData","json","Error","message","data","token","error","signin","localStorage","setItem","checkToken","Authorization"],"sources":["/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"https://web-project-api-full-daen.onrender.com\";\n\nexport const signup = async (email, password) => {\n  try {\n\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message);\n    }\n\n    const data = await response.json();\n    return data.token;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const signin = async (email, password) => {\n  try {\n\n    const response = await fetch(`${BASE_URL}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message);\n    }\n\n    const { token } = await response.json();\n\n    localStorage.setItem(\"jwt\", token);\n    return token;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const checkToken = async (token) => {\n  try {\n\n    const response = await fetch(`${BASE_URL}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,gDAAgD,CAEjE,MAAO,MAAM,CAAAC,MAAM,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAC/C,GAAI,CAEF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,QAAQ,SAAS,CAAE,CACjDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAET,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAGF,GAAI,CAACC,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,CAAC,CACpC,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAb,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAG,IAAI,CAACC,KAAK,CACnB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,MAAM,CAAG,KAAAA,CAAOlB,KAAK,CAAEC,QAAQ,GAAK,CAC/C,GAAI,CAEF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,QAAQ,SAAS,CAAE,CACjDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAET,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAGF,GAAI,CAACC,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,CAAC,CACpC,CAEA,KAAM,CAAEE,KAAM,CAAC,CAAG,KAAM,CAAAd,QAAQ,CAACU,IAAI,CAAC,CAAC,CAEvCO,YAAY,CAACC,OAAO,CAAC,KAAK,CAAEJ,KAAK,CAAC,CAClC,MAAO,CAAAA,KAAK,CACd,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAI,UAAU,CAAG,KAAO,CAAAL,KAAK,EAAK,CACzC,GAAI,CAEF,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,QAAQ,WAAW,CAAE,CACnDM,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCiB,aAAa,CAAE,UAAUN,KAAK,EAChC,CACF,CAAC,CAAC,CAGF,GAAI,CAACd,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,CAAC,CACpC,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAb,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAG,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}