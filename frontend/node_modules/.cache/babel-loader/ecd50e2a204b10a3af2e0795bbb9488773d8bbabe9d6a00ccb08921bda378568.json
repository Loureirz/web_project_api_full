{"ast":null,"code":"var _jsxFileName = \"/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/components/InfoToolTip.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport close from \"../images/close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoTooltip = ({\n  isOpen,\n  onClose,\n  isSuccess,\n  message\n}) => {\n  _s();\n  const overlayRef = useRef();\n  function handleCloseClickOverlay(e) {\n    if (e.target === overlayRef.current) {\n      onClose();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${isOpen ? \"modal_open\" : \"\"}`,\n    ref: overlayRef,\n    onClick: handleCloseClickOverlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"modal__close-icon\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"modal__close-icon-img\",\n          src: close,\n          alt: \"\\xCCcone para fechar o pop-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `modal__icon ${isSuccess ? \"modal__icon_success\" : \"modal__icon_error\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `modal__message ${isSuccess ? \"modal__message_success\" : \"modal__message_error\"}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoTooltip, \"zstPeajXx4JQ+03KZkj4CWOnlsM=\");\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["useRef","close","jsxDEV","_jsxDEV","InfoTooltip","isOpen","onClose","isSuccess","message","_s","overlayRef","handleCloseClickOverlay","e","target","current","className","ref","onClick","children","type","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/components/InfoToolTip.jsx"],"sourcesContent":["import { useRef } from \"react\";\n\nimport close from \"../images/close.svg\";\n\nconst InfoTooltip = ({ isOpen, onClose, isSuccess, message }) => {\n  const overlayRef = useRef();\n\n  function handleCloseClickOverlay(e) {\n    if (e.target === overlayRef.current) {\n      onClose();\n    }\n  }\n\n  return (\n    <div\n      className={`modal ${isOpen ? \"modal_open\" : \"\"}`}\n      ref={overlayRef}\n      onClick={handleCloseClickOverlay}\n    >\n      <div className=\"modal__content\">\n        <button type=\"button\" className=\"modal__close-icon\" onClick={onClose}>\n          <img\n            className=\"modal__close-icon-img\"\n            src={close}\n            alt=\"ÃŒcone para fechar o pop-up\"\n          />\n        </button>\n        <img\n          className={`modal__icon ${\n            isSuccess ? \"modal__icon_success\" : \"modal__icon_error\"\n          }`}\n        />\n        <p\n          className={`modal__message ${\n            isSuccess ? \"modal__message_success\" : \"modal__message_error\"\n          }`}\n        >\n          {message}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoTooltip;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAMC,UAAU,GAAGV,MAAM,CAAC,CAAC;EAE3B,SAASW,uBAAuBA,CAACC,CAAC,EAAE;IAClC,IAAIA,CAAC,CAACC,MAAM,KAAKH,UAAU,CAACI,OAAO,EAAE;MACnCR,OAAO,CAAC,CAAC;IACX;EACF;EAEA,oBACEH,OAAA;IACEY,SAAS,EAAE,SAASV,MAAM,GAAG,YAAY,GAAG,EAAE,EAAG;IACjDW,GAAG,EAAEN,UAAW;IAChBO,OAAO,EAAEN,uBAAwB;IAAAO,QAAA,eAEjCf,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAG,QAAA,gBAC7Bf,OAAA;QAAQgB,IAAI,EAAC,QAAQ;QAACJ,SAAS,EAAC,mBAAmB;QAACE,OAAO,EAAEX,OAAQ;QAAAY,QAAA,eACnEf,OAAA;UACEY,SAAS,EAAC,uBAAuB;UACjCK,GAAG,EAAEnB,KAAM;UACXoB,GAAG,EAAC;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTtB,OAAA;QACEY,SAAS,EAAE,eACTR,SAAS,GAAG,qBAAqB,GAAG,mBAAmB;MACtD;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACFtB,OAAA;QACEY,SAAS,EAAE,kBACTR,SAAS,GAAG,wBAAwB,GAAG,sBAAsB,EAC5D;QAAAW,QAAA,EAEFV;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtCIL,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}