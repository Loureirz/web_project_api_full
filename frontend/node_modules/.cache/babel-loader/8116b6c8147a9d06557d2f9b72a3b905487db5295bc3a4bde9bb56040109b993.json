{"ast":null,"code":"var _jsxFileName = \"/Users/yuriloureiro/Projects/web_project_around_react/src/components/EditAvatar.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useRef, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditAvatar({\n  isOpen,\n  onClose,\n  onUpdateAvatar\n}) {\n  _s();\n  const {\n    currentUser\n  } = useContext(CurrentUserContext);\n  const avatarRef = useRef(); // Usando ref para acessar o valor da entrada de avatar\n\n  useEffect(() => {\n    if (currentUser && currentUser.avatar) {\n      avatarRef.current.value = currentUser.avatar; // Define o valor da ref com o avatar atual\n    }\n  }, [currentUser]);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Obtém o valor diretamente da entrada usando a ref\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    name: \"avatar\",\n    title: \"Alterar Foto de Perfil\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: avatarRef // Referência para o input\n      ,\n      className: \"popup__avatar-input\",\n      id: \"avatar\",\n      placeholder: \"Link da Imagem\",\n      type: \"url\",\n      name: \"image\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"popup__avatar-submit\",\n      children: \"Salvar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatar, \"e7ulqaXIvA+qXvACJmJNpcewJ7k=\");\n_c = EditAvatar;\nvar _c;\n$RefreshReg$(_c, \"EditAvatar\");","map":{"version":3,"names":["useState","useContext","useRef","useEffect","CurrentUserContext","PopupWithForm","jsxDEV","_jsxDEV","EditAvatar","isOpen","onClose","onUpdateAvatar","_s","currentUser","avatarRef","avatar","current","value","handleSubmit","e","preventDefault","onSubmit","name","title","children","ref","className","id","placeholder","type","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yuriloureiro/Projects/web_project_around_react/src/components/EditAvatar.js"],"sourcesContent":["import { useState, useContext, useRef, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\n\nexport default function EditAvatar({ isOpen, onClose, onUpdateAvatar }) {\n  const { currentUser } = useContext(CurrentUserContext);\n  const avatarRef = useRef(); // Usando ref para acessar o valor da entrada de avatar\n\n  useEffect(() => {\n    if (currentUser && currentUser.avatar) {\n      avatarRef.current.value = currentUser.avatar; // Define o valor da ref com o avatar atual\n    }\n  }, [currentUser]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Obtém o valor diretamente da entrada usando a ref\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  };\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"avatar\"\n      title=\"Alterar Foto de Perfil\"\n    >\n      <input\n        ref={avatarRef} // Referência para o input\n        className=\"popup__avatar-input\"\n        id=\"avatar\"\n        placeholder=\"Link da Imagem\"\n        type=\"url\"\n        name=\"image\"\n        required\n      />\n      <button type=\"submit\" className=\"popup__avatar-submit\">\n        Salvar\n      </button>\n    </PopupWithForm>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,UAAUA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACtE,MAAM;IAAEC;EAAY,CAAC,GAAGZ,UAAU,CAACG,kBAAkB,CAAC;EACtD,MAAMU,SAAS,GAAGZ,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE5BC,SAAS,CAAC,MAAM;IACd,IAAIU,WAAW,IAAIA,WAAW,CAACE,MAAM,EAAE;MACrCD,SAAS,CAACE,OAAO,CAACC,KAAK,GAAGJ,WAAW,CAACE,MAAM,CAAC,CAAC;IAChD;EACF,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACAT,cAAc,CAAC;MACbI,MAAM,EAAED,SAAS,CAACE,OAAO,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,oBACEV,OAAA,CAACF,aAAa;IACZI,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBW,QAAQ,EAAEH,YAAa;IACvBI,IAAI,EAAC,QAAQ;IACbC,KAAK,EAAC,wBAAwB;IAAAC,QAAA,gBAE9BjB,OAAA;MACEkB,GAAG,EAAEX,SAAU,CAAC;MAAA;MAChBY,SAAS,EAAC,qBAAqB;MAC/BC,EAAE,EAAC,QAAQ;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,IAAI,EAAC,KAAK;MACVP,IAAI,EAAC,OAAO;MACZQ,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,sBAAsB;MAAAF,QAAA,EAAC;IAEvD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACtB,EAAA,CAzCuBJ,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}