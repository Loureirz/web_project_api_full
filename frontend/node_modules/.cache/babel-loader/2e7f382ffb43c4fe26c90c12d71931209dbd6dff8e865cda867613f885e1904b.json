{"ast":null,"code":"var _jsxFileName = \"/Users/yuriloureiro/Projects/web_project_around_auth/src/components/Register.jsx\",\n  _s = $RefreshSig$();\nimport { NavLink, useNavigate } from \"react-router\";\nimport InfoTooltip from \"./InfoToolTip\";\nimport { useState } from \"react\";\nimport * as auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await auth.signup(formData.email, formData.password);\n      setIsSuccess(true);\n      setMessage(\"Cadastro realizado com sucesso!\");\n      setIsModalOpen(true);\n      setTimeout(() => {\n        navigate(\"/signin\"); // Redireciona após fechar o modal\n      }, 2000);\n    } catch (err) {\n      setIsSuccess(false);\n      setMessage(\"Erro ao realizar o cadastro. Tente novamente.\");\n      setIsModalOpen(true);\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register__welcome\",\n        children: \"Inscrever-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth__form register__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"E-mail\",\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          className: \"auth__input register__input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          value: formData.password,\n          id: \"password\",\n          onChange: handleChange,\n          placeholder: \"Senha\",\n          minLength: 6,\n          className: \"auth__input register__input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register__button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"auth__button register__button\",\n            children: \"Inscrever-se\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register__signin\",\n        children: [\"J\\xE1 \\xE9 um membro?\", \" \", /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"link\",\n          to: \"/signin\",\n          children: \"Fa\\xE7a o Login aqui!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isModalOpen,\n        onClose: handleCloseModal,\n        isSuccess: isSuccess,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(Register, \"q6rQbFIkQVBwXhXSBXPGODOEnMk=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["NavLink","useNavigate","InfoTooltip","useState","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","formData","setFormData","email","password","isModalOpen","setIsModalOpen","isSuccess","setIsSuccess","message","setMessage","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","signup","setTimeout","err","handleCloseModal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","id","type","onChange","required","minLength","to","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/yuriloureiro/Projects/web_project_around_auth/src/components/Register.jsx"],"sourcesContent":["import { NavLink, useNavigate } from \"react-router\";\nimport InfoTooltip from \"./InfoToolTip\";\nimport { useState } from \"react\";\nimport * as auth from \"../utils/auth\";\n\nfunction Register() {\n\n    const [formData, setFormData] = useState({\n      email: \"\",\n      password: \"\",\n    });\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setFormData({ ...formData, [name]: value });\n    };\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n  \n      try {\n        await auth.signup(formData.email, formData.password);\n        setIsSuccess(true);\n        setMessage(\"Cadastro realizado com sucesso!\");\n        setIsModalOpen(true);\n  \n        setTimeout(() => {\n          navigate(\"/signin\"); // Redireciona após fechar o modal\n        }, 2000);\n      } catch (err) {\n        setIsSuccess(false);\n        setMessage(\"Erro ao realizar o cadastro. Tente novamente.\");\n        setIsModalOpen(true);\n      }\n    };\n\n    const handleCloseModal = () => {\n      setIsModalOpen(false);\n    }\n\n    return (\n        <>\n          <div className=\"register\">\n            <p className=\"register__welcome\">Inscrever-se</p>\n            <form\n              onSubmit={handleSubmit}\n              className=\"auth__form register__form\"\n            >\n              <input\n                placeholder=\"E-mail\"\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                className=\"auth__input register__input\"\n                required\n              />\n              <span className=\"popup__error\"></span>\n              <input\n                name=\"password\"\n                type=\"password\"\n                value={formData.password}\n                id=\"password\"\n                onChange={handleChange}\n                placeholder=\"Senha\"\n                minLength={6}\n                className=\"auth__input register__input\"\n                required\n              />\n              <span className=\"popup__error\"></span>\n              <div className=\"register__button-container\">\n                <button type=\"submit\" className=\"auth__button register__button\">\n                  Inscrever-se\n                </button>\n              </div>\n            </form>\n  \n            <p className=\"register__signin\">\n              Já é um membro?{\" \"}\n              <NavLink className=\"link\" to=\"/signin\">\n                Faça o Login aqui!\n              </NavLink>\n            </p>\n            <InfoTooltip\n            isOpen={isModalOpen}\n            onClose={handleCloseModal}\n            isSuccess={isSuccess}\n            message={message}\n          />\n          </div>\n        </>\n      );\n}\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}