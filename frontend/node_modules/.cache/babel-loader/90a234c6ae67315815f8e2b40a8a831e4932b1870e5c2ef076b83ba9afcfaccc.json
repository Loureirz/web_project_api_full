{"ast":null,"code":"var _jsxFileName = \"/Users/yuriloureiro/Projects/web_project_around_react/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./components/Header.js\";\nimport Main from \"./components/Main.js\";\nimport Footer from \"./components/Footer.js\";\nimport api from \"./utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./components/ImagePopup\";\nimport EditProfile from \"./components/EditProfile.js\";\nimport { CurrentUserContext } from \"./contexts/CurrentUserContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    name: \"\",\n    about: \"\"\n  });\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getUserInfo().then(setCurrentUser).catch(error => console.log('Erro ao obter dados do usuário:', error));\n    api.getInitialCards().then(setCards).catch(error => console.log('Erro ao obter dados do usuário:', error));\n  }, []);\n  useEffect(() => {\n    (async () => {\n      await api.getUserInfo().then(data => {\n        setCurrentUser(data);\n      });\n    })();\n  }, []);\n  const handleUpdateUser = data => {\n    (async () => {\n      await api.editUserInfo(data).then(newData => {\n        setCurrentUser(newData);\n      });\n    })();\n  };\n\n  /*useEffect(() => {\n    api\n      .getInitialCards()\n      .then((fetchedCards) => {\n        setCards(fetchedCards);\n      })\n      .catch((error) => console.log('Erro ao obter os cards:', error));\n  }, []);*/\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    console.log(\"Estado atual do like antes da API:\", isLiked);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      console.log(\"Novo card atualizado:\", newCard); // Confirma o card atualizado\n\n      // Atualiza o estado de cards, substituindo apenas o card que mudou\n      setCards(prevCards => {\n        if (prevCards.length === 0) {\n          console.log(\"Erro: Nenhum card encontrado no estado atual.\");\n          return prevCards; // Retorna o estado anterior sem mudanças\n        }\n\n        // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n        const updatedCards = prevCards.map(c => c._id === card._id ? newCard : c);\n        console.log(\"Novo estado de cards após atualização:\", updatedCards);\n        return updatedCards;\n      });\n    }).catch(error => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  const handleCardDelete = card => {\n    api.removeCard(card._id) // Método que faz a requisição DELETE para deletar o card\n    .then(() => {\n      setCards(state => state.filter(c => c._id !== card._id)); // Remove o card do estado\n    }).catch(error => console.log(\"Erro ao deletar o card:\", error));\n  };\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: {\n        currentUser,\n        handleUpdateUser\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        cards: cards,\n        onEditAvatarClick: handleEditAvatarClick,\n        isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n        onEditProfileClick: handleEditProfileClick,\n        isEditProfilePopupOpen: isEditProfilePopupOpen,\n        onAddPlaceClick: handleAddPlaceClick,\n        isAddPlacePopupOpen: isAddPlacePopupOpen,\n        closeAllPopups: closeAllPopups,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfile, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), selectedCard && /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kqAdJNYQ/BbATyD6O6Ho8Dj/oPM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","api","useEffect","useState","ImagePopup","EditProfile","CurrentUserContext","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","getUserInfo","then","catch","error","console","log","getInitialCards","data","handleUpdateUser","editUserInfo","newData","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","prevCards","length","updatedCards","map","c","handleCardDelete","removeCard","state","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","onCardClick","onCardLike","onCardDelete","isOpen","onClose","onUpdateUser","_c","$RefreshReg$"],"sources":["/Users/yuriloureiro/Projects/web_project_around_react/src/App.js"],"sourcesContent":["import Header from \"./components/Header.js\";\nimport Main from \"./components/Main.js\";\nimport Footer from \"./components/Footer.js\";\nimport api from \"./utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./components/ImagePopup\";\nimport EditProfile from \"./components/EditProfile.js\";\nimport { CurrentUserContext } from \"./contexts/CurrentUserContext.js\";\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({ name: \"\", about: \"\" });\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then(setCurrentUser)\n      .catch((error) => console.log('Erro ao obter dados do usuário:', error));\n\n        api\n        .getInitialCards()\n        .then(setCards)\n        .catch((error) => console.log('Erro ao obter dados do usuário:', error));\n    }, []);\n\n    useEffect(() => {\n      (async () => {\n        await api.getUserInfo().then((data) => {\n          setCurrentUser(data);\n        });\n      })();\n    }, []);\n  \n    const handleUpdateUser = (data) => {\n      (async () => {\n        await api.editUserInfo(data).then((newData) => {\n          setCurrentUser(newData);\n        });\n      })();\n    };\n\n  /*useEffect(() => {\n    api\n      .getInitialCards()\n      .then((fetchedCards) => {\n        setCards(fetchedCards);\n      })\n      .catch((error) => console.log('Erro ao obter os cards:', error));\n  }, []);*/\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card)\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    console.log(\"Estado atual do like antes da API:\", isLiked);\n  \n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        console.log(\"Novo card atualizado:\", newCard); // Confirma o card atualizado\n  \n        // Atualiza o estado de cards, substituindo apenas o card que mudou\n        setCards((prevCards) => {\n          if (prevCards.length === 0) {\n            console.log(\"Erro: Nenhum card encontrado no estado atual.\");\n            return prevCards; // Retorna o estado anterior sem mudanças\n          }\n          \n          // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n          const updatedCards = prevCards.map((c) => \n            c._id === card._id ? newCard : c\n          );\n  \n          console.log(\"Novo estado de cards após atualização:\", updatedCards);\n          return updatedCards;\n        });\n      })\n      .catch((error) => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  \n\nconst handleCardDelete = (card) => {\n  api\n    .removeCard(card._id) // Método que faz a requisição DELETE para deletar o card\n    .then(() => {\n      setCards((state) => state.filter((c) => c._id !== card._id)); // Remove o card do estado\n    })\n    .catch((error) => console.log(\"Erro ao deletar o card:\", error));\n};\n\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n}\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n}\n\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={{ currentUser, handleUpdateUser}}>\n      <Header />\n      <Main \n      cards={cards}\n      onEditAvatarClick={handleEditAvatarClick} \n      isEditAvatarPopupOpen={isEditAvatarPopupOpen} \n      onEditProfileClick={handleEditProfileClick} \n      isEditProfilePopupOpen={isEditProfilePopupOpen} \n      onAddPlaceClick={handleAddPlaceClick} \n      isAddPlacePopupOpen={isAddPlacePopupOpen} \n      closeAllPopups={closeAllPopups}\n      onCardClick={handleCardClick}\n      onCardLike={handleCardLike}\n      onCardDelete={handleCardDelete}\n      />\n      <EditProfile\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      {selectedCard && (\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      )}\n      <Footer />\n      </CurrentUserContext.Provider>\n  </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}