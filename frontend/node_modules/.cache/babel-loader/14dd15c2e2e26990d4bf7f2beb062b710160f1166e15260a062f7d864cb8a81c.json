{"ast":null,"code":"var _jsxFileName = \"/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport { Route, Routes, useNavigate, Navigate } from \"react-router-dom\";\nimport Header from \"./Header.jsx\";\nimport Main from \"./Main.jsx\";\nimport Footer from \"./Footer.jsx\";\nimport api from \"../utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./ImagePopup.jsx\";\nimport EditProfile from \"./EditProfile.jsx\";\nimport EditAvatar from \"./EditAvatar.jsx\";\nimport NewCard from \"./NewCard.jsx\";\nimport Register from \"./Register.jsx\";\nimport Login from \"./Login.jsx\";\nimport ProtectedRoute from \"./ProtectedRoute.jsx\";\nimport ConfirmationPopup from \"./RemoveCard.jsx\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport * as auth from \"../utils/auth.js\";\nimport * as token from \"../utils/token.js\";\nimport { removeToken } from \"../utils/token.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState({\n    email: \"\"\n  });\n  const navigate = useNavigate();\n  const handleUpdateUser = userData => {\n    if (!userData.name || !userData.about) {\n      console.log('Erro: nome ou descrição ausentes');\n      return; // Não envia a requisição se os dados estiverem incompletos\n    }\n    api.editUserInfo(userData).then(userInfo => {\n      setCurrentUser(userInfo); // Atualiza os dados do usuário\n      closeAllPopups(); // Fecha o popup\n    }).catch(error => {\n      console.log('Erro ao atualizar o perfil:', error);\n    });\n  };\n\n  /*const handleLogin = (email) => {\n    setLoggedIn(true);\n    setUserEmail(email);\n    localStorage.setItem(\"loggedIn\", \"true\");\n    localStorage.setItem(\"userEmail\", email);\n  };*/\n\n  const handleLogin = async (email, password) => {\n    if (!email || !password) {\n      console.error(\"Erro: Email ou senha não foram fornecidos!\");\n      return;\n    }\n    try {\n      const data = await auth.signin(email, password);\n      if (data && data.token) {\n        token.setToken(data.token); // Aqui está o armazenamento do token.\n        console.log(\"Token armazenado:\", token.getToken());\n        setLoggedIn(true);\n        setUserEmail(email);\n        navigate(\"/\");\n      } else {\n        console.error(\"Erro: Token não encontrado.\");\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer login:\", error);\n    }\n  };\n  const handleLogout = () => {\n    removeToken();\n    setLoggedIn(false);\n  };\n  const handleUpdateAvatar = data => {\n    (async () => {\n      await api.editAvatar(data).then(newData => {\n        setCurrentUser(newData); // Atualiza o avatar do usuário localmente\n        closeAllPopups(); // Fecha o pop-up após a atualização\n      }).catch(error => console.error(\"Erro ao atualizar o avatar:\", error));\n    })();\n  };\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      // Atualiza o estado de cards, substituindo apenas o card que mudou\n      setCards(prevCards => {\n        if (prevCards.length === 0) {\n          return prevCards; // Retorna o estado anterior sem mudanças\n        }\n\n        // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n        const updatedCards = prevCards.map(c => c._id === card._id ? newCard : c);\n        return updatedCards;\n      });\n    }).catch(error => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  function handleDeleteClick(card) {\n    setCardToDelete(card); // Define o card a ser excluído\n    setIsConfirmationPopupOpen(true); // Abre o popup de confirmação\n  }\n\n  // Função chamada após confirmação\n  function confirmDelete() {\n    if (!cardToDelete) return; // Verificação de segurança para evitar chamadas desnecessárias\n\n    api.removeCard(cardToDelete._id) // Chama a API para deletar o card\n    .then(() => {\n      setCards(state => state.filter(c => c._id !== cardToDelete._id)); // Remove o card do estado\n\n      setCardToDelete(null); // Limpa o card selecionado\n      setIsConfirmationPopupOpen(false); // Fecha o popup de confirmação\n    }).catch(error => console.log(\"Erro ao deletar o card:\", error));\n  }\n  const handleAddPlaceSubmit = newCardData => {\n    api.addCard(newCardData).then(newCard => {\n      setCards(prevCards => [newCard, ...prevCards]);\n      closeAllPopups();\n    }).catch(error => console.error('Erro ao adicionar o cartão:', error));\n  };\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  };\n  useEffect(() => {\n    try {\n      const jwt = token.getToken(); // Tenta obter o token\n      if (jwt) {\n        // Se o token existir, verifica a autenticidade\n        auth.checkToken(jwt).then(data => {\n          console.log(\"Usuário autenticado:\", data);\n          setLoggedIn(true);\n          setUserEmail(data.data.email);\n          setCurrentUser(data);\n          navigate(\"/\");\n          api.getInitialCards().then(data => {\n            setCards(data.data);\n          });\n        }).catch(err => {\n          console.error(\"Erro na verificação do token:\", err);\n          setLoggedIn(false);\n        });\n      }\n    } catch (error) {\n      console.error(\"Erro ao recuperar token:\", error.message);\n      setLoggedIn(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: {\n        currentUser,\n        handleUpdateUser,\n        handleUpdateAvatar\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        userEmail: userEmail,\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            loggedIn: loggedIn,\n            children: /*#__PURE__*/_jsxDEV(Main, {\n              cards: cards,\n              onEditAvatarClick: handleEditAvatarClick,\n              isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n              onEditProfileClick: handleEditProfileClick,\n              isEditProfilePopupOpen: isEditProfilePopupOpen,\n              onAddPlaceClick: handleAddPlaceClick,\n              isAddPlacePopupOpen: isAddPlacePopupOpen,\n              closeAllPopups: closeAllPopups,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfile, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatar, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NewCard, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlaceSubmit: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n        isOpen: isConfirmationPopupOpen,\n        onClose: () => setIsConfirmationPopupOpen(false),\n        onConfirmationSubmit: confirmDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }, this), selectedCard && /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0gOVdk1ehyf6Z7Fe6E3woQEMsVk=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","useNavigate","Navigate","Header","Main","Footer","api","useEffect","useState","ImagePopup","EditProfile","EditAvatar","NewCard","Register","Login","ProtectedRoute","ConfirmationPopup","CurrentUserContext","auth","token","removeToken","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","cardToDelete","setCardToDelete","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","userEmail","setUserEmail","email","navigate","handleUpdateUser","userData","name","about","console","log","editUserInfo","then","userInfo","closeAllPopups","catch","error","handleLogin","password","data","signin","setToken","getToken","handleLogout","handleUpdateAvatar","editAvatar","newData","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","prevCards","length","updatedCards","map","c","handleDeleteClick","confirmDelete","removeCard","state","filter","handleAddPlaceSubmit","newCardData","addCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","jwt","checkToken","getInitialCards","err","message","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","onCardClick","onCardLike","onCardDelete","to","replace","isOpen","onClose","onUpdateUser","onUpdateAvatar","onAddPlaceSubmit","onConfirmationSubmit","_c","$RefreshReg$"],"sources":["/Users/yuriloureiro/Projects/web_project_api_full/frontend/src/components/App.jsx"],"sourcesContent":["import { Route, Routes, useNavigate, Navigate } from \"react-router-dom\";\nimport Header from \"./Header.jsx\";\nimport Main from \"./Main.jsx\";\nimport Footer from \"./Footer.jsx\";\nimport api from \"../utils/api.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./ImagePopup.jsx\";\nimport EditProfile from \"./EditProfile.jsx\";\nimport EditAvatar from \"./EditAvatar.jsx\";\nimport NewCard from \"./NewCard.jsx\";\nimport Register from \"./Register.jsx\";\nimport Login from \"./Login.jsx\";\nimport ProtectedRoute from \"./ProtectedRoute.jsx\";\nimport ConfirmationPopup from \"./RemoveCard.jsx\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport * as auth from \"../utils/auth.js\";\nimport * as token from \"../utils/token.js\";\nimport { removeToken } from \"../utils/token.js\";\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false); \n  const [userEmail, setUserEmail] = useState({ email: \"\" });\n  const navigate = useNavigate();\n  \n    const handleUpdateUser = (userData) => {\n      if (!userData.name || !userData.about) {\n        console.log('Erro: nome ou descrição ausentes');\n        return; // Não envia a requisição se os dados estiverem incompletos\n      }\n    \n      api.editUserInfo(userData)\n        .then((userInfo) => {\n          setCurrentUser(userInfo); // Atualiza os dados do usuário\n          closeAllPopups(); // Fecha o popup\n        })\n        .catch((error) => {\n          console.log('Erro ao atualizar o perfil:', error);\n        });\n    };\n\n    /*const handleLogin = (email) => {\n      setLoggedIn(true);\n      setUserEmail(email);\n      localStorage.setItem(\"loggedIn\", \"true\");\n      localStorage.setItem(\"userEmail\", email);\n    };*/\n\n    const handleLogin = async (email, password) => {\n      if (!email || !password) {\n        console.error(\"Erro: Email ou senha não foram fornecidos!\");\n        return;\n      }\n    \n      try {\n        const data = await auth.signin(email, password);\n        if (data && data.token) {\n          token.setToken(data.token);  // Aqui está o armazenamento do token.\n          console.log(\"Token armazenado:\", token.getToken());\n          setLoggedIn(true);\n          setUserEmail(email);\n          navigate(\"/\");\n        } else {\n          console.error(\"Erro: Token não encontrado.\");\n        }\n      } catch (error) {\n        console.error(\"Erro ao fazer login:\", error);\n      }\n    };    \n    \n    const handleLogout = () => {\n      removeToken();\n      setLoggedIn(false);\n    };\n\n    const handleUpdateAvatar = (data) => {\n      (async () => {\n        await api\n          .editAvatar(data)\n          .then((newData) => {\n            setCurrentUser(newData); // Atualiza o avatar do usuário localmente\n            closeAllPopups(); // Fecha o pop-up após a atualização\n          })\n          .catch((error) => console.error(\"Erro ao atualizar o avatar:\", error));\n      })();\n    };\n  \n\n  const handleCardClick = (card) => {\n    setSelectedCard(card)\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  \n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n  \n        // Atualiza o estado de cards, substituindo apenas o card que mudou\n        setCards((prevCards) => {\n          if (prevCards.length === 0) {\n            return prevCards; // Retorna o estado anterior sem mudanças\n          }\n          \n          // Retorna uma nova lista de cards, substituindo apenas o card atualizado\n          const updatedCards = prevCards.map((c) => \n            c._id === card._id ? newCard : c\n          );\n\n          return updatedCards;\n        });\n      })\n      .catch((error) => console.log(\"Erro ao atualizar o like:\", error));\n  };\n  \n\n  function handleDeleteClick(card) {\n    setCardToDelete(card); // Define o card a ser excluído\n    setIsConfirmationPopupOpen(true); // Abre o popup de confirmação\n  }\n\n  // Função chamada após confirmação\n  function confirmDelete() {\n    if (!cardToDelete) return; // Verificação de segurança para evitar chamadas desnecessárias\n  \n    api\n      .removeCard(cardToDelete._id) // Chama a API para deletar o card\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== cardToDelete._id)); // Remove o card do estado\n  \n        setCardToDelete(null); // Limpa o card selecionado\n        setIsConfirmationPopupOpen(false); // Fecha o popup de confirmação\n      })\n      .catch((error) => console.log(\"Erro ao deletar o card:\", error));\n  }\n\nconst handleAddPlaceSubmit = (newCardData) => {\n  api.addCard(newCardData)\n    .then((newCard) => {\n      setCards((prevCards) => [newCard, ...prevCards]);\n      closeAllPopups();\n    })\n    .catch((error) => console.error('Erro ao adicionar o cartão:', error));\n};\n\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n}\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n}\n\n  const closeAllPopups = () => {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    try {\n      const jwt = token.getToken();  // Tenta obter o token\n      if (jwt) {\n        // Se o token existir, verifica a autenticidade\n        auth.checkToken(jwt).then((data) => {\n          console.log(\"Usuário autenticado:\", data);\n          setLoggedIn(true);\n          setUserEmail(data.data.email);\n          setCurrentUser(data);\n          navigate(\"/\");\n          api.getInitialCards().then(data=>{\n            setCards(data.data);\n          })\n        }).catch(err => {\n          console.error(\"Erro na verificação do token:\", err);\n          setLoggedIn(false);\n        });\n      }\n    } catch (error) {\n      console.error(\"Erro ao recuperar token:\", error.message);\n      setLoggedIn(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={{ currentUser, handleUpdateUser, handleUpdateAvatar}}>\n      <Header \n        loggedIn={loggedIn}\n        userEmail={userEmail}\n        handleLogout={handleLogout}\n      />\n      <Routes>\n      <Route\n    path=\"/\"\n    element={\n      <ProtectedRoute loggedIn={loggedIn}>\n        <Main\n          cards={cards}\n          onEditAvatarClick={handleEditAvatarClick}\n          isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n          onEditProfileClick={handleEditProfileClick}\n          isEditProfilePopupOpen={isEditProfilePopupOpen}\n          onAddPlaceClick={handleAddPlaceClick}\n          isAddPlacePopupOpen={isAddPlacePopupOpen}\n          closeAllPopups={closeAllPopups}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleDeleteClick}\n        />\n        </ProtectedRoute>\n    }\n  />\n  <Route path=\"/signin\" element={<Login handleLogin={handleLogin} />} />\n  <Route path=\"/signup\" element={<Register />} />\n  <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n      <EditProfile\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n      <EditAvatar\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n      <NewCard\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlaceSubmit={handleAddPlaceSubmit}\n      />\n      <ConfirmationPopup\n        isOpen={isConfirmationPopupOpen}\n        onClose={() => setIsConfirmationPopupOpen(false)}\n        onConfirmationSubmit={confirmDelete}\n      />\n      {selectedCard && (\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      )}\n      <Footer />\n      </CurrentUserContext.Provider>\n  </div>\n  );\n\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}